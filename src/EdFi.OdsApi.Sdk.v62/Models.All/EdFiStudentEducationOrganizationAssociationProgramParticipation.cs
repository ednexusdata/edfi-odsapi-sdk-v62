// <auto-generated>
/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using EdFi.OdsApi.Sdk.v62.Client;

namespace EdFi.OdsApi.Sdk.v62.Models.All
{
    /// <summary>
    /// EdFiStudentEducationOrganizationAssociationProgramParticipation
    /// </summary>
    public partial class EdFiStudentEducationOrganizationAssociationProgramParticipation : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentEducationOrganizationAssociationProgramParticipation" /> class.
        /// </summary>
        /// <param name="programTypeDescriptor">The type of program.</param>
        /// <param name="beginDate">The date the student was associated with the program or service.</param>
        /// <param name="designatedBy">The person, organization, or department that designated the program association.</param>
        /// <param name="endDate">The date the program participation ended.</param>
        /// <param name="programCharacteristics">An unordered collection of studentEducationOrganizationAssociationProgramParticipationProgramCharacteristics. Reflects important characteristics of the program, such as categories or particular indications.</param>
        /// <param name="ext">Extensions to the StudentEducationOrganizationAssociationProgramParticipation entity.</param>
        [JsonConstructor]
        public EdFiStudentEducationOrganizationAssociationProgramParticipation(string programTypeDescriptor, Option<DateOnly?> beginDate = default, Option<string?> designatedBy = default, Option<DateOnly?> endDate = default, Option<List<EdFiStudentEducationOrganizationAssociationProgramParticipationProgramCharacteristic>?> programCharacteristics = default, Option<Object?> ext = default)
        {
            ProgramTypeDescriptor = programTypeDescriptor;
            BeginDateOption = beginDate;
            DesignatedByOption = designatedBy;
            EndDateOption = endDate;
            ProgramCharacteristicsOption = programCharacteristics;
            ExtOption = ext;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// The type of program.
        /// </summary>
        /// <value>The type of program.</value>
        [JsonPropertyName("programTypeDescriptor")]
        public string ProgramTypeDescriptor { get; set; }

        /// <summary>
        /// Used to track the state of BeginDate
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<DateOnly?> BeginDateOption { get; private set; }

        /// <summary>
        /// The date the student was associated with the program or service.
        /// </summary>
        /// <value>The date the student was associated with the program or service.</value>
        [JsonPropertyName("beginDate")]
        public DateOnly? BeginDate { get { return this.BeginDateOption; } set { this.BeginDateOption = new(value); } }

        /// <summary>
        /// Used to track the state of DesignatedBy
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> DesignatedByOption { get; private set; }

        /// <summary>
        /// The person, organization, or department that designated the program association.
        /// </summary>
        /// <value>The person, organization, or department that designated the program association.</value>
        [JsonPropertyName("designatedBy")]
        public string? DesignatedBy { get { return this.DesignatedByOption; } set { this.DesignatedByOption = new(value); } }

        /// <summary>
        /// Used to track the state of EndDate
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<DateOnly?> EndDateOption { get; private set; }

        /// <summary>
        /// The date the program participation ended.
        /// </summary>
        /// <value>The date the program participation ended.</value>
        [JsonPropertyName("endDate")]
        public DateOnly? EndDate { get { return this.EndDateOption; } set { this.EndDateOption = new(value); } }

        /// <summary>
        /// Used to track the state of ProgramCharacteristics
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationProgramParticipationProgramCharacteristic>?> ProgramCharacteristicsOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationProgramParticipationProgramCharacteristics. Reflects important characteristics of the program, such as categories or particular indications.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationProgramParticipationProgramCharacteristics. Reflects important characteristics of the program, such as categories or particular indications.</value>
        [JsonPropertyName("programCharacteristics")]
        public List<EdFiStudentEducationOrganizationAssociationProgramParticipationProgramCharacteristic>? ProgramCharacteristics { get { return this.ProgramCharacteristicsOption; } set { this.ProgramCharacteristicsOption = new(value); } }

        /// <summary>
        /// Used to track the state of Ext
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Object?> ExtOption { get; private set; }

        /// <summary>
        /// Extensions to the StudentEducationOrganizationAssociationProgramParticipation entity.
        /// </summary>
        /// <value>Extensions to the StudentEducationOrganizationAssociationProgramParticipation entity.</value>
        [JsonPropertyName("_ext")]
        public Object? Ext { get { return this.ExtOption; } set { this.ExtOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiStudentEducationOrganizationAssociationProgramParticipation {\n");
            sb.Append("  ProgramTypeDescriptor: ").Append(ProgramTypeDescriptor).Append("\n");
            sb.Append("  BeginDate: ").Append(BeginDate).Append("\n");
            sb.Append("  DesignatedBy: ").Append(DesignatedBy).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  ProgramCharacteristics: ").Append(ProgramCharacteristics).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // ProgramTypeDescriptor (string) maxLength
            if (this.ProgramTypeDescriptor != null && this.ProgramTypeDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for ProgramTypeDescriptor, length must be less than 306.", new [] { "ProgramTypeDescriptor" });
            }

            // DesignatedBy (string) maxLength
            if (this.DesignatedBy != null && this.DesignatedBy.Length > 60)
            {
                yield return new ValidationResult("Invalid value for DesignatedBy, length must be less than 60.", new [] { "DesignatedBy" });
            }

            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="EdFiStudentEducationOrganizationAssociationProgramParticipation" />
    /// </summary>
    public class EdFiStudentEducationOrganizationAssociationProgramParticipationJsonConverter : JsonConverter<EdFiStudentEducationOrganizationAssociationProgramParticipation>
    {
        /// <summary>
        /// The format to use to serialize BeginDate
        /// </summary>
        public static string BeginDateFormat { get; set; } = "yyyy'-'MM'-'dd";

        /// <summary>
        /// The format to use to serialize EndDate
        /// </summary>
        public static string EndDateFormat { get; set; } = "yyyy'-'MM'-'dd";

        /// <summary>
        /// Deserializes json to <see cref="EdFiStudentEducationOrganizationAssociationProgramParticipation" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override EdFiStudentEducationOrganizationAssociationProgramParticipation Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> programTypeDescriptor = default;
            Option<DateOnly?> beginDate = default;
            Option<string?> designatedBy = default;
            Option<DateOnly?> endDate = default;
            Option<List<EdFiStudentEducationOrganizationAssociationProgramParticipationProgramCharacteristic>?> programCharacteristics = default;
            Option<Object?> ext = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "programTypeDescriptor":
                            programTypeDescriptor = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "beginDate":
                            beginDate = new Option<DateOnly?>(JsonSerializer.Deserialize<DateOnly?>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        case "designatedBy":
                            designatedBy = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "endDate":
                            endDate = new Option<DateOnly?>(JsonSerializer.Deserialize<DateOnly?>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        case "programCharacteristics":
                            programCharacteristics = new Option<List<EdFiStudentEducationOrganizationAssociationProgramParticipationProgramCharacteristic>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationProgramParticipationProgramCharacteristic>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "_ext":
                            ext = new Option<Object?>(JsonSerializer.Deserialize<Object>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!programTypeDescriptor.IsSet)
                throw new ArgumentException("Property is required for class EdFiStudentEducationOrganizationAssociationProgramParticipation.", nameof(programTypeDescriptor));

            if (programTypeDescriptor.IsSet && programTypeDescriptor.Value == null)
                throw new ArgumentNullException(nameof(programTypeDescriptor), "Property is not nullable for class EdFiStudentEducationOrganizationAssociationProgramParticipation.");

            if (programCharacteristics.IsSet && programCharacteristics.Value == null)
                throw new ArgumentNullException(nameof(programCharacteristics), "Property is not nullable for class EdFiStudentEducationOrganizationAssociationProgramParticipation.");

            if (ext.IsSet && ext.Value == null)
                throw new ArgumentNullException(nameof(ext), "Property is not nullable for class EdFiStudentEducationOrganizationAssociationProgramParticipation.");

            return new EdFiStudentEducationOrganizationAssociationProgramParticipation(programTypeDescriptor.Value!, beginDate, designatedBy, endDate, programCharacteristics, ext);
        }

        /// <summary>
        /// Serializes a <see cref="EdFiStudentEducationOrganizationAssociationProgramParticipation" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="edFiStudentEducationOrganizationAssociationProgramParticipation"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, EdFiStudentEducationOrganizationAssociationProgramParticipation edFiStudentEducationOrganizationAssociationProgramParticipation, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, edFiStudentEducationOrganizationAssociationProgramParticipation, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="EdFiStudentEducationOrganizationAssociationProgramParticipation" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="edFiStudentEducationOrganizationAssociationProgramParticipation"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, EdFiStudentEducationOrganizationAssociationProgramParticipation edFiStudentEducationOrganizationAssociationProgramParticipation, JsonSerializerOptions jsonSerializerOptions)
        {
            if (edFiStudentEducationOrganizationAssociationProgramParticipation.ProgramTypeDescriptor == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociationProgramParticipation.ProgramTypeDescriptor), "Property is required for class EdFiStudentEducationOrganizationAssociationProgramParticipation.");

            if (edFiStudentEducationOrganizationAssociationProgramParticipation.ProgramCharacteristicsOption.IsSet && edFiStudentEducationOrganizationAssociationProgramParticipation.ProgramCharacteristics == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociationProgramParticipation.ProgramCharacteristics), "Property is required for class EdFiStudentEducationOrganizationAssociationProgramParticipation.");

            if (edFiStudentEducationOrganizationAssociationProgramParticipation.ExtOption.IsSet && edFiStudentEducationOrganizationAssociationProgramParticipation.Ext == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociationProgramParticipation.Ext), "Property is required for class EdFiStudentEducationOrganizationAssociationProgramParticipation.");

            writer.WriteString("programTypeDescriptor", edFiStudentEducationOrganizationAssociationProgramParticipation.ProgramTypeDescriptor);

            if (edFiStudentEducationOrganizationAssociationProgramParticipation.BeginDateOption.IsSet)
                if (edFiStudentEducationOrganizationAssociationProgramParticipation.BeginDateOption.Value != null)
                    writer.WriteString("beginDate", edFiStudentEducationOrganizationAssociationProgramParticipation.BeginDateOption.Value!.Value.ToString(BeginDateFormat));
                else
                    writer.WriteNull("beginDate");

            if (edFiStudentEducationOrganizationAssociationProgramParticipation.DesignatedByOption.IsSet)
                if (edFiStudentEducationOrganizationAssociationProgramParticipation.DesignatedByOption.Value != null)
                    writer.WriteString("designatedBy", edFiStudentEducationOrganizationAssociationProgramParticipation.DesignatedBy);
                else
                    writer.WriteNull("designatedBy");

            if (edFiStudentEducationOrganizationAssociationProgramParticipation.EndDateOption.IsSet)
                if (edFiStudentEducationOrganizationAssociationProgramParticipation.EndDateOption.Value != null)
                    writer.WriteString("endDate", edFiStudentEducationOrganizationAssociationProgramParticipation.EndDateOption.Value!.Value.ToString(EndDateFormat));
                else
                    writer.WriteNull("endDate");

            if (edFiStudentEducationOrganizationAssociationProgramParticipation.ProgramCharacteristicsOption.IsSet)
            {
                writer.WritePropertyName("programCharacteristics");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociationProgramParticipation.ProgramCharacteristics, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociationProgramParticipation.ExtOption.IsSet)
            {
                writer.WritePropertyName("_ext");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociationProgramParticipation.Ext, jsonSerializerOptions);
            }
        }
    }
}
