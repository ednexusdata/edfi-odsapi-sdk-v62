/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EdFi.OdsApi.Sdk.v62.Client.OpenAPIDateConverter;

namespace EdFi.OdsApi.Sdk.v62.Models.All
{
    /// <summary>
    /// EdFiStudentDisciplineIncidentAssociation
    /// </summary>
    [DataContract(Name = "edFi_studentDisciplineIncidentAssociation")]
    public partial class EdFiStudentDisciplineIncidentAssociation : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentDisciplineIncidentAssociation" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EdFiStudentDisciplineIncidentAssociation() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentDisciplineIncidentAssociation" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="disciplineIncidentReference">disciplineIncidentReference (required).</param>
        /// <param name="studentReference">studentReference (required).</param>
        /// <param name="behaviors">An unordered collection of studentDisciplineIncidentAssociationBehaviors. Describes behavior by category and provides a detailed description..</param>
        /// <param name="studentParticipationCodeDescriptor">The role or type of participation of a student in a discipline incident. (required).</param>
        /// <param name="etag">A unique system-generated value that identifies the version of the resource..</param>
        /// <param name="ext">Extensions to the StudentDisciplineIncidentAssociation entity..</param>
        public EdFiStudentDisciplineIncidentAssociation(string id = default, EdFiDisciplineIncidentReference disciplineIncidentReference = default, EdFiStudentReference studentReference = default, List<EdFiStudentDisciplineIncidentAssociationBehavior> behaviors = default, string studentParticipationCodeDescriptor = default, string etag = default, Object ext = default)
        {
            // to ensure "disciplineIncidentReference" is required (not null)
            if (disciplineIncidentReference == null)
            {
                throw new ArgumentNullException("disciplineIncidentReference is a required property for EdFiStudentDisciplineIncidentAssociation and cannot be null");
            }
            this.DisciplineIncidentReference = disciplineIncidentReference;
            // to ensure "studentReference" is required (not null)
            if (studentReference == null)
            {
                throw new ArgumentNullException("studentReference is a required property for EdFiStudentDisciplineIncidentAssociation and cannot be null");
            }
            this.StudentReference = studentReference;
            // to ensure "studentParticipationCodeDescriptor" is required (not null)
            if (studentParticipationCodeDescriptor == null)
            {
                throw new ArgumentNullException("studentParticipationCodeDescriptor is a required property for EdFiStudentDisciplineIncidentAssociation and cannot be null");
            }
            this.StudentParticipationCodeDescriptor = studentParticipationCodeDescriptor;
            this.Id = id;
            this.Behaviors = behaviors;
            this.Etag = etag;
            this.Ext = ext;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets DisciplineIncidentReference
        /// </summary>
        [DataMember(Name = "disciplineIncidentReference", IsRequired = true, EmitDefaultValue = true)]
        public EdFiDisciplineIncidentReference DisciplineIncidentReference { get; set; }

        /// <summary>
        /// Gets or Sets StudentReference
        /// </summary>
        [DataMember(Name = "studentReference", IsRequired = true, EmitDefaultValue = true)]
        public EdFiStudentReference StudentReference { get; set; }

        /// <summary>
        /// An unordered collection of studentDisciplineIncidentAssociationBehaviors. Describes behavior by category and provides a detailed description.
        /// </summary>
        /// <value>An unordered collection of studentDisciplineIncidentAssociationBehaviors. Describes behavior by category and provides a detailed description.</value>
        [DataMember(Name = "behaviors", EmitDefaultValue = false)]
        public List<EdFiStudentDisciplineIncidentAssociationBehavior> Behaviors { get; set; }

        /// <summary>
        /// The role or type of participation of a student in a discipline incident.
        /// </summary>
        /// <value>The role or type of participation of a student in a discipline incident.</value>
        [DataMember(Name = "studentParticipationCodeDescriptor", IsRequired = true, EmitDefaultValue = true)]
        public string StudentParticipationCodeDescriptor { get; set; }

        /// <summary>
        /// A unique system-generated value that identifies the version of the resource.
        /// </summary>
        /// <value>A unique system-generated value that identifies the version of the resource.</value>
        [DataMember(Name = "_etag", EmitDefaultValue = false)]
        public string Etag { get; set; }

        /// <summary>
        /// Extensions to the StudentDisciplineIncidentAssociation entity.
        /// </summary>
        /// <value>Extensions to the StudentDisciplineIncidentAssociation entity.</value>
        [DataMember(Name = "_ext", EmitDefaultValue = false)]
        public Object Ext { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiStudentDisciplineIncidentAssociation {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  DisciplineIncidentReference: ").Append(DisciplineIncidentReference).Append("\n");
            sb.Append("  StudentReference: ").Append(StudentReference).Append("\n");
            sb.Append("  Behaviors: ").Append(Behaviors).Append("\n");
            sb.Append("  StudentParticipationCodeDescriptor: ").Append(StudentParticipationCodeDescriptor).Append("\n");
            sb.Append("  Etag: ").Append(Etag).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // StudentParticipationCodeDescriptor (string) maxLength
            if (this.StudentParticipationCodeDescriptor != null && this.StudentParticipationCodeDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for StudentParticipationCodeDescriptor, length must be less than 306.", new [] { "StudentParticipationCodeDescriptor" });
            }

            yield break;
        }
    }

}
