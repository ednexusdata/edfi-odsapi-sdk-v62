// <auto-generated>
/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using EdFi.OdsApi.Sdk.v62.Client;

namespace EdFi.OdsApi.Sdk.v62.Models.All
{
    /// <summary>
    /// EdFiStudentDisciplineIncidentAssociation
    /// </summary>
    public partial class EdFiStudentDisciplineIncidentAssociation : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentDisciplineIncidentAssociation" /> class.
        /// </summary>
        /// <param name="disciplineIncidentReference">disciplineIncidentReference</param>
        /// <param name="studentReference">studentReference</param>
        /// <param name="studentParticipationCodeDescriptor">The role or type of participation of a student in a discipline incident.</param>
        /// <param name="id">id</param>
        /// <param name="behaviors">An unordered collection of studentDisciplineIncidentAssociationBehaviors. Describes behavior by category and provides a detailed description.</param>
        /// <param name="etag">A unique system-generated value that identifies the version of the resource.</param>
        /// <param name="ext">Extensions to the StudentDisciplineIncidentAssociation entity.</param>
        [JsonConstructor]
        public EdFiStudentDisciplineIncidentAssociation(EdFiDisciplineIncidentReference disciplineIncidentReference, EdFiStudentReference studentReference, string studentParticipationCodeDescriptor, Option<string?> id = default, Option<List<EdFiStudentDisciplineIncidentAssociationBehavior>?> behaviors = default, Option<string?> etag = default, Option<Object?> ext = default)
        {
            DisciplineIncidentReference = disciplineIncidentReference;
            StudentReference = studentReference;
            StudentParticipationCodeDescriptor = studentParticipationCodeDescriptor;
            IdOption = id;
            BehaviorsOption = behaviors;
            EtagOption = etag;
            ExtOption = ext;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Gets or Sets DisciplineIncidentReference
        /// </summary>
        [JsonPropertyName("disciplineIncidentReference")]
        public EdFiDisciplineIncidentReference DisciplineIncidentReference { get; set; }

        /// <summary>
        /// Gets or Sets StudentReference
        /// </summary>
        [JsonPropertyName("studentReference")]
        public EdFiStudentReference StudentReference { get; set; }

        /// <summary>
        /// The role or type of participation of a student in a discipline incident.
        /// </summary>
        /// <value>The role or type of participation of a student in a discipline incident.</value>
        [JsonPropertyName("studentParticipationCodeDescriptor")]
        public string StudentParticipationCodeDescriptor { get; set; }

        /// <summary>
        /// Used to track the state of Id
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> IdOption { get; private set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [JsonPropertyName("id")]
        public string? Id { get { return this.IdOption; } set { this.IdOption = new(value); } }

        /// <summary>
        /// Used to track the state of Behaviors
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentDisciplineIncidentAssociationBehavior>?> BehaviorsOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentDisciplineIncidentAssociationBehaviors. Describes behavior by category and provides a detailed description.
        /// </summary>
        /// <value>An unordered collection of studentDisciplineIncidentAssociationBehaviors. Describes behavior by category and provides a detailed description.</value>
        [JsonPropertyName("behaviors")]
        public List<EdFiStudentDisciplineIncidentAssociationBehavior>? Behaviors { get { return this.BehaviorsOption; } set { this.BehaviorsOption = new(value); } }

        /// <summary>
        /// Used to track the state of Etag
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> EtagOption { get; private set; }

        /// <summary>
        /// A unique system-generated value that identifies the version of the resource.
        /// </summary>
        /// <value>A unique system-generated value that identifies the version of the resource.</value>
        [JsonPropertyName("_etag")]
        public string? Etag { get { return this.EtagOption; } set { this.EtagOption = new(value); } }

        /// <summary>
        /// Used to track the state of Ext
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Object?> ExtOption { get; private set; }

        /// <summary>
        /// Extensions to the StudentDisciplineIncidentAssociation entity.
        /// </summary>
        /// <value>Extensions to the StudentDisciplineIncidentAssociation entity.</value>
        [JsonPropertyName("_ext")]
        public Object? Ext { get { return this.ExtOption; } set { this.ExtOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiStudentDisciplineIncidentAssociation {\n");
            sb.Append("  DisciplineIncidentReference: ").Append(DisciplineIncidentReference).Append("\n");
            sb.Append("  StudentReference: ").Append(StudentReference).Append("\n");
            sb.Append("  StudentParticipationCodeDescriptor: ").Append(StudentParticipationCodeDescriptor).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Behaviors: ").Append(Behaviors).Append("\n");
            sb.Append("  Etag: ").Append(Etag).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // StudentParticipationCodeDescriptor (string) maxLength
            if (this.StudentParticipationCodeDescriptor != null && this.StudentParticipationCodeDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for StudentParticipationCodeDescriptor, length must be less than 306.", new [] { "StudentParticipationCodeDescriptor" });
            }

            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="EdFiStudentDisciplineIncidentAssociation" />
    /// </summary>
    public class EdFiStudentDisciplineIncidentAssociationJsonConverter : JsonConverter<EdFiStudentDisciplineIncidentAssociation>
    {
        /// <summary>
        /// Deserializes json to <see cref="EdFiStudentDisciplineIncidentAssociation" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override EdFiStudentDisciplineIncidentAssociation Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<EdFiDisciplineIncidentReference?> disciplineIncidentReference = default;
            Option<EdFiStudentReference?> studentReference = default;
            Option<string?> studentParticipationCodeDescriptor = default;
            Option<string?> id = default;
            Option<List<EdFiStudentDisciplineIncidentAssociationBehavior>?> behaviors = default;
            Option<string?> etag = default;
            Option<Object?> ext = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "disciplineIncidentReference":
                            disciplineIncidentReference = new Option<EdFiDisciplineIncidentReference?>(JsonSerializer.Deserialize<EdFiDisciplineIncidentReference>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "studentReference":
                            studentReference = new Option<EdFiStudentReference?>(JsonSerializer.Deserialize<EdFiStudentReference>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "studentParticipationCodeDescriptor":
                            studentParticipationCodeDescriptor = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "id":
                            id = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "behaviors":
                            behaviors = new Option<List<EdFiStudentDisciplineIncidentAssociationBehavior>?>(JsonSerializer.Deserialize<List<EdFiStudentDisciplineIncidentAssociationBehavior>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "_etag":
                            etag = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "_ext":
                            ext = new Option<Object?>(JsonSerializer.Deserialize<Object>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!disciplineIncidentReference.IsSet)
                throw new ArgumentException("Property is required for class EdFiStudentDisciplineIncidentAssociation.", nameof(disciplineIncidentReference));

            if (!studentReference.IsSet)
                throw new ArgumentException("Property is required for class EdFiStudentDisciplineIncidentAssociation.", nameof(studentReference));

            if (!studentParticipationCodeDescriptor.IsSet)
                throw new ArgumentException("Property is required for class EdFiStudentDisciplineIncidentAssociation.", nameof(studentParticipationCodeDescriptor));

            if (disciplineIncidentReference.IsSet && disciplineIncidentReference.Value == null)
                throw new ArgumentNullException(nameof(disciplineIncidentReference), "Property is not nullable for class EdFiStudentDisciplineIncidentAssociation.");

            if (studentReference.IsSet && studentReference.Value == null)
                throw new ArgumentNullException(nameof(studentReference), "Property is not nullable for class EdFiStudentDisciplineIncidentAssociation.");

            if (studentParticipationCodeDescriptor.IsSet && studentParticipationCodeDescriptor.Value == null)
                throw new ArgumentNullException(nameof(studentParticipationCodeDescriptor), "Property is not nullable for class EdFiStudentDisciplineIncidentAssociation.");

            if (id.IsSet && id.Value == null)
                throw new ArgumentNullException(nameof(id), "Property is not nullable for class EdFiStudentDisciplineIncidentAssociation.");

            if (behaviors.IsSet && behaviors.Value == null)
                throw new ArgumentNullException(nameof(behaviors), "Property is not nullable for class EdFiStudentDisciplineIncidentAssociation.");

            if (etag.IsSet && etag.Value == null)
                throw new ArgumentNullException(nameof(etag), "Property is not nullable for class EdFiStudentDisciplineIncidentAssociation.");

            if (ext.IsSet && ext.Value == null)
                throw new ArgumentNullException(nameof(ext), "Property is not nullable for class EdFiStudentDisciplineIncidentAssociation.");

            return new EdFiStudentDisciplineIncidentAssociation(disciplineIncidentReference.Value!, studentReference.Value!, studentParticipationCodeDescriptor.Value!, id, behaviors, etag, ext);
        }

        /// <summary>
        /// Serializes a <see cref="EdFiStudentDisciplineIncidentAssociation" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="edFiStudentDisciplineIncidentAssociation"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, EdFiStudentDisciplineIncidentAssociation edFiStudentDisciplineIncidentAssociation, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, edFiStudentDisciplineIncidentAssociation, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="EdFiStudentDisciplineIncidentAssociation" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="edFiStudentDisciplineIncidentAssociation"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, EdFiStudentDisciplineIncidentAssociation edFiStudentDisciplineIncidentAssociation, JsonSerializerOptions jsonSerializerOptions)
        {
            if (edFiStudentDisciplineIncidentAssociation.DisciplineIncidentReference == null)
                throw new ArgumentNullException(nameof(edFiStudentDisciplineIncidentAssociation.DisciplineIncidentReference), "Property is required for class EdFiStudentDisciplineIncidentAssociation.");

            if (edFiStudentDisciplineIncidentAssociation.StudentReference == null)
                throw new ArgumentNullException(nameof(edFiStudentDisciplineIncidentAssociation.StudentReference), "Property is required for class EdFiStudentDisciplineIncidentAssociation.");

            if (edFiStudentDisciplineIncidentAssociation.StudentParticipationCodeDescriptor == null)
                throw new ArgumentNullException(nameof(edFiStudentDisciplineIncidentAssociation.StudentParticipationCodeDescriptor), "Property is required for class EdFiStudentDisciplineIncidentAssociation.");

            if (edFiStudentDisciplineIncidentAssociation.IdOption.IsSet && edFiStudentDisciplineIncidentAssociation.Id == null)
                throw new ArgumentNullException(nameof(edFiStudentDisciplineIncidentAssociation.Id), "Property is required for class EdFiStudentDisciplineIncidentAssociation.");

            if (edFiStudentDisciplineIncidentAssociation.BehaviorsOption.IsSet && edFiStudentDisciplineIncidentAssociation.Behaviors == null)
                throw new ArgumentNullException(nameof(edFiStudentDisciplineIncidentAssociation.Behaviors), "Property is required for class EdFiStudentDisciplineIncidentAssociation.");

            if (edFiStudentDisciplineIncidentAssociation.EtagOption.IsSet && edFiStudentDisciplineIncidentAssociation.Etag == null)
                throw new ArgumentNullException(nameof(edFiStudentDisciplineIncidentAssociation.Etag), "Property is required for class EdFiStudentDisciplineIncidentAssociation.");

            if (edFiStudentDisciplineIncidentAssociation.ExtOption.IsSet && edFiStudentDisciplineIncidentAssociation.Ext == null)
                throw new ArgumentNullException(nameof(edFiStudentDisciplineIncidentAssociation.Ext), "Property is required for class EdFiStudentDisciplineIncidentAssociation.");

            writer.WritePropertyName("disciplineIncidentReference");
            JsonSerializer.Serialize(writer, edFiStudentDisciplineIncidentAssociation.DisciplineIncidentReference, jsonSerializerOptions);
            writer.WritePropertyName("studentReference");
            JsonSerializer.Serialize(writer, edFiStudentDisciplineIncidentAssociation.StudentReference, jsonSerializerOptions);
            writer.WriteString("studentParticipationCodeDescriptor", edFiStudentDisciplineIncidentAssociation.StudentParticipationCodeDescriptor);

            if (edFiStudentDisciplineIncidentAssociation.IdOption.IsSet)
                writer.WriteString("id", edFiStudentDisciplineIncidentAssociation.Id);

            if (edFiStudentDisciplineIncidentAssociation.BehaviorsOption.IsSet)
            {
                writer.WritePropertyName("behaviors");
                JsonSerializer.Serialize(writer, edFiStudentDisciplineIncidentAssociation.Behaviors, jsonSerializerOptions);
            }
            if (edFiStudentDisciplineIncidentAssociation.EtagOption.IsSet)
                writer.WriteString("_etag", edFiStudentDisciplineIncidentAssociation.Etag);

            if (edFiStudentDisciplineIncidentAssociation.ExtOption.IsSet)
            {
                writer.WritePropertyName("_ext");
                JsonSerializer.Serialize(writer, edFiStudentDisciplineIncidentAssociation.Ext, jsonSerializerOptions);
            }
        }
    }
}
